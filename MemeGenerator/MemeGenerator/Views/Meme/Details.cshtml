@model MemeGenerator.Data.MemeResponse

@{
    ViewBag.Title = "Details";
}

<div>
    <h3>@Html.DisplayNameFor(model => model.Title): @Html.DisplayFor(model => model.Title) </h3>
    <p>Submitted by: @Html.DisplayFor(model => model.CreatorUsername)</p>
   
    <img id="image" data-id=@Model.Id src=@Model.Url style="display:none"/>
    <canvas id="canvas" ></canvas> 
    
</div>
<p>
    @if (Request.IsAuthenticated && ((MemeGenerator.Security.CustomPrincipal)User).IsInRole("Moderator"))
    {
        @Html.ActionLink("Remove Meme", "RemoveMeme", "Meme", new { id = Model.Id }, new { @class = "btn btn-danger" })
    }
    @Html.ActionLink("Back to List", "Index")
</p>

<hr />

@Html.ActionLink("Add Comment", "Comment", new { id = Model.Id }) |
@Html.ActionLink("Back to List", "Index")
<h4>Comments</h4>
@if(Model.Comments.Count > 0)
{
    <table class="table table-hover">
        <tr>
            <th>
                Author
            </th>
            <th>
                Comment
            </th>
            <th></th>
        </tr>
        @foreach (var item in Model.Comments)
        {
            <tr>
                <td>@Html.DisplayFor(modelItem => item.Creator.Username)</td>
                <td>@Html.DisplayFor(modelItem => item.Text)</td>
                @if (Request.IsAuthenticated && ((MemeGenerator.Security.CustomPrincipal)User).IsInRole("Moderator") && item.Text != "[Removed]")
                {
                    <td>@Html.ActionLink("Remove Comment", "RemoveComment", "Meme", new { id = item.Id }, new { @class = "btn btn-warning" })</td>
                }
            </tr>

        }
    </table>
}
else
{
    <p>No comments yet</p>
}
<hr />

<script src="~/Scripts/details.js"></script>