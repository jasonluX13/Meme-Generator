@model MemeGenerator.Data.MemeResponse

@{
    ViewBag.Title = "Details";
}

@section links {
    <link href="~/Content/Details.css" rel="stylesheet" />
}

<div>
    <h3>@Html.DisplayNameFor(model => model.Title): @Html.DisplayFor(model => model.Title) </h3>
    <p>Submitted by: @Html.DisplayFor(model => model.CreatorUsername)</p>

    @if (Model.ImageBytes != null)
    {
        <img id="image" data-id=@Model.Id src="data:image;base64,@System.Convert.ToBase64String(Model.ImageBytes)" />
    }
    else
    {
        <img id="image" data-id=@Model.Id src=@Model.Url style="display:none "/>
        <canvas id="canvas"></canvas>
    }


    <div class="voting">
        <span id="upvote" class="bold">▲</span>
        <span id="votes">0</span>
        <span id="downvote" class="bold">▼</span>
    </div>

</div>
<p>
    @if (Request.IsAuthenticated && ((MemeGenerator.Security.CustomPrincipal)User).IsInRole("Moderator"))
    {
        @Html.ActionLink("Remove Meme", "RemoveMeme", "Meme", new { id = Model.Id }, new { @class = "btn btn-danger" })
    }
    @Html.ActionLink("Back to List", "Index")
</p>

<hr />

<div id="commentArea">
    
</div>

<h4>Comments</h4>
@if (Model.Comments.Count > 0)
{
    <table class="table table-hover">
        <tr>
            <th>
                Author
            </th>
            <th>
                Comment
            </th>
            <th></th>
        </tr>
        @foreach (var item in Model.Comments)
        {
            <tr>
                <td>@Html.DisplayFor(modelItem => item.Creator.Username)</td>
                <td>@Html.DisplayFor(modelItem => item.Text)</td>
                @if (Request.IsAuthenticated && ((MemeGenerator.Security.CustomPrincipal)User).IsInRole("Moderator") && item.Text != "[Removed]")
                {
                    <td>@Html.ActionLink("Remove Comment", "RemoveComment", "Meme", new { id = item.Id }, new { @class = "btn btn-warning" })</td>
                }
            </tr>

        }
    </table>
}
else
{
    <p>No comments yet</p>
}
<hr />


<script>
        const isAuthenticated = @Request.IsAuthenticated.ToString().ToLower();
</script>
<script src="~/Scripts/details.js"></script>
<script src="~/Scripts/Voting.js"></script>
<script src="~/Scripts/Comment.js"></script>


